import java.util.*;
public class sum
{
    public static String[] getAllLists(String[] elements, int lengthOfList)
    {
      //initialize our returned list with the number of elements calculated above
      String[] allLists = new String[(int)Math.pow(elements.length, lengthOfList)];

      //lists of length 1 are just the original elements
      if(lengthOfList == 1) return elements; 
      else
      {
        //the recursion--get all lists of length 3, length 2, all the way up to 1
        String[] allSublists = getAllLists(elements, lengthOfList - 1);

        //append the sublists to each element
        int arrayIndex = 0;

        for(int i = 0; i < elements.length; i++)
        {
          for(int j = 0; j < allSublists.length; j++)
          {
            //add the newly appended combination to the list
            allLists[arrayIndex] = elements[i] +","+ allSublists[j];
            arrayIndex++;
          }
        }
       return allLists;
       }
    }

    public static void main(String[] args)
    {
      String[] database = {"1","2","3"};
      int numArr[]=null;
      int sum=0;
      String[] arr;
      List<Integer> al = new ArrayList<>();
      for(int i=1; i<=database.length; i++)
      {
        int a = Integer.parseInt(database[i]);
        if(a==6)
        {
            System.out.println(a);
        }
        
        else
        {
           String[] result = getAllLists(database, i);

           for(int j=0; j<result.length; j++)
           {
               //System.out.println(result[j]);
               arr = result[j].split(",");

               numArr = new int[arr.length];
               for(int ii = 0; ii < numArr.length; ii++)
               {
                   numArr[ii] = Integer.parseInt(arr[ii]);
                     
                   sum=sum+numArr[ii];
                   al.add(numArr[ii]);
                
               }
               if(sum==6)
               {
                   System.out.println(al);
               }
             }
           }
        }
    }
}
